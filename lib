--[[
    Puppware Fork - Modified to match COMBAT UI style
    Original by Puppeh, forked by Zaplistt
    Modified for clean cheat menu aesthetic
]]

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Zaplistt/puppware-fork/main/lib.lua"))()

-- Override default colors and styles
Library.Settings.BGColor = Color3.fromRGB(30, 30, 40)
Library.Settings.TextColor = Color3.fromRGB(220, 220, 220)
Library.Settings.AccentColor = Color3.fromRGB(0, 150, 255)
Library.Settings.Font = Enum.Font.Gotham
Library.Settings.BoldFont = Enum.Font.GothamBold

-- Modify window creation
function Library:CreateWindow(options)
    local window = self:NewWindow(options)
    
    -- Remove title bar gradient
    if window.topbar.gradient then
        window.topbar.gradient:Destroy()
    end
    
    -- Style the title
    window.topbar.title.TextColor3 = self.Settings.TextColor
    window.topbar.title.Font = self.Settings.BoldFont
    window.topbar.title.TextSize = 18
    
    -- Style the tabs
    for _, tab in pairs(window.tabs) do
        tab.button.TextColor3 = self.Settings.TextColor
        tab.button.Font = self.Settings.Font
        tab.button.TextSize = 14
        
        -- When tab is selected
        tab.button.MouseButton1Click:Connect(function()
            for _, otherTab in pairs(window.tabs) do
                otherTab.button.TextColor3 = self.Settings.TextColor
            end
            tab.button.TextColor3 = self.Settings.AccentColor
        end)
    end
    
    -- Style the first tab as active
    if window.tabs[1] then
        window.tabs[1].button.TextColor3 = self.Settings.AccentColor
    end
    
    return window
end

-- Modify section creation
function Library.Window:AddSection(options)
    local section = self:NewSection(options)
    
    -- Style section title
    section.title.TextColor3 = self.Settings.TextColor
    section.title.Font = self.Settings.BoldFont
    section.title.TextSize = 16
    section.title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Add divider
    local divider = Instance.new("Frame")
    divider.Name = "Divider"
    divider.Size = UDim2.new(1, 0, 0, 1)
    divider.Position = UDim2.new(0, 0, 0, 20)
    divider.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    divider.BorderSizePixel = 0
    divider.Parent = section.main
    
    -- Adjust padding
    section.main.Padding = UDim.new(0, 5)
    
    return section
end

-- Modify toggle creation
function Library.Section:AddToggle(options)
    local toggle = self:NewToggle(options)
    
    -- Style the label
    toggle.textlabel.TextColor3 = self.Settings.TextColor
    toggle.textlabel.Font = self.Settings.Font
    toggle.textlabel.TextSize = 14
    toggle.textlabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Style the toggle button
    toggle.togglebutton.BackgroundColor3 = options.default and self.Settings.AccentColor or Color3.fromRGB(80, 80, 80)
    toggle.togglebutton.BorderSizePixel = 0
    
    -- Update toggle function to match new style
    local oldToggle = toggle.Toggle
    function toggle:Toggle(value)
        oldToggle(self, value)
        self.togglebutton.BackgroundColor3 = self.enabled and self.Settings.AccentColor or Color3.fromRGB(80, 80, 80)
    end
    
    return toggle
end

-- Modify slider creation
function Library.Section:AddSlider(options)
    local slider = self:NewSlider(options)
    
    -- Style the label
    slider.textlabel.TextColor3 = self.Settings.TextColor
    slider.textlabel.Font = self.Settings.Font
    slider.textlabel.TextSize = 14
    slider.textlabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Style the value display
    slider.value.TextColor3 = self.Settings.TextColor
    slider.value.Font = self.Settings.Font
    slider.value.TextSize = 14
    
    -- Style the slider track
    slider.slider.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    slider.slider.BorderSizePixel = 0
    
    -- Style the slider fill
    slider.fill.BackgroundColor3 = self.Settings.AccentColor
    slider.fill.BorderSizePixel = 0
    
    -- Style the slider button
    slider.button.BackgroundColor3 = self.Settings.AccentColor
    slider.button.BorderSizePixel = 0
    slider.button.Size = UDim2.new(0, 10, 0, 10)
    
    return slider
end

-- Modify dropdown creation
function Library.Section:AddDropdown(options)
    local dropdown = self:NewDropdown(options)
    
    -- Style the label
    dropdown.textlabel.TextColor3 = self.Settings.TextColor
    dropdown.textlabel.Font = self.Settings.Font
    dropdown.textlabel.TextSize = 14
    dropdown.textlabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Style the dropdown button
    dropdown.dropbutton.TextColor3 = self.Settings.TextColor
    dropdown.dropbutton.Font = self.Settings.Font
    dropdown.dropbutton.TextSize = 14
    dropdown.dropbutton.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    dropdown.dropbutton.BorderSizePixel = 0
    
    -- Style the dropdown list
    dropdown.droplist.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    dropdown.droplist.BorderSizePixel = 0
    
    -- Style dropdown options
    for _, option in pairs(dropdown.droplist:GetChildren()) do
        if option:IsA("TextButton") then
            option.TextColor3 = self.Settings.TextColor
            option.Font = self.Settings.Font
            option.TextSize = 14
            option.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
            option.BorderSizePixel = 0
        end
    end
    
    return dropdown
end

return Library
